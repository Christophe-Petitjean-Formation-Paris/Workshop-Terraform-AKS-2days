name: 2 - Workflow CI/CD Terraform


on:
  push:
    branches:
    - master
  workflow_dispatch:

jobs:

  Build-Terraform:
    runs-on: ubuntu-latest

    steps:

      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Run Bridgecrew 
        id: Bridgecrew
        uses: bridgecrewio/bridgecrew-action@master 
        with:
          api-key: ${{ secrets.BC_API_KEY }}
          directory: /Terraform/Lab4_Pipeline_CI_CD_Terraform/
          framework: terraform
        
     # - name: Code Analysis
     #   uses: bridgecrewio/checkov-action@v12.1347.0
     #   with:
     #     directory: Terraform/Lab4_Pipeline_CI_CD_Terraform/
     #     api-key: ${{ secrets.CHECKOV_API_KEY }}
     #     framework: terraform
     #     output_format: json

      # Install the needed version of Terraform cli
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          cd ./Terraform/Lab4_Pipeline_CI_CD_Terraform          
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      # https://www.terraform.io/cli/commands/validate
      - name: Terraform Validate
        run: |
          cd ./Terraform/Lab4_Pipeline_CI_CD_Terraform
          terraform validate

      # Generates an execution plan for Terraform with tfplan file https://www.terraform.io/cli/commands/plan
      - name: Terraform Plan
        run: |
          cd ./Terraform/Lab4_Pipeline_CI_CD_Terraform
          terraform plan -var 'AzureSubscriptionID=${{ secrets.SUBSCRIPTIONID }}' -var 'AzureClientSecret=${{ secrets.CLIENTSECRET }}' -var 'AzureClientID=${{ secrets.CLIENTID }}' -var 'AzureTenandID=${{ secrets.TENANTID }}' -lock=false -out=monplan.tfplan
              
      # apply a execution plan https://www.terraform.io/cli/commands/apply      
      - name: Terraform Apply
        run: |
          cd ./Terraform/Lab4_Pipeline_CI_CD_Terraform
          terraform apply -auto-approve -lock=false "monplan.tfplan"
    

